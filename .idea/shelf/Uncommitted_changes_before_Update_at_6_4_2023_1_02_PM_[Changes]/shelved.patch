Index: src/main/java/repository/impl/ReceiptRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package repository.impl;\r\n\r\npublic class ReceiptRepository {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/repository/impl/ReceiptRepository.java b/src/main/java/repository/impl/ReceiptRepository.java
--- a/src/main/java/repository/impl/ReceiptRepository.java	(revision 246453dd5525cf1576c1fc7bdf73a4408dacf7de)
+++ b/src/main/java/repository/impl/ReceiptRepository.java	(date 1685858463438)
@@ -1,4 +1,106 @@
 package repository.impl;
 
-public class ReceiptRepository {
+import javafx.util.converter.LocalDateTimeStringConverter;
+import model.Cake;
+import model.Customer;
+import model.DetailReceipt;
+import model.Receipt;
+import repository.BaseRepository;
+import repository.IReceiptRepository;
+
+import java.sql.*;
+import java.time.LocalDate;
+import java.time.LocalDateTime;
+import java.util.ArrayList;
+import java.util.List;
+
+public class ReceiptRepository implements IReceiptRepository {
+    private static String DISPLAY = "select * from banh";
+    private static String ADD = "insert into hoa_don(ma_khach_hang,ma_nhan_vien,ngay_dat_hang,dia_chi_giao_hang) value(?,?,?,?)";
+
+    @Override
+    public List<Cake> showListCakeOrder() {
+        Connection connection = BaseRepository.getConnection();
+        List<Cake> list = new ArrayList<>();
+        try {
+            Statement statement = connection.createStatement();
+            ResultSet resultSet = statement.executeQuery(DISPLAY);
+            while (resultSet.next()) {
+                int id = resultSet.getInt("ma_banh");
+                String name = resultSet.getString("ten_banh");
+                int typeOfCake = resultSet.getInt("ma_loai_banh");
+                double price = resultSet.getDouble("gia");
+                int amount = resultSet.getInt("so_luong_hien_co");
+                String picture = resultSet.getString("anh_banh");
+                list.add(new Cake(id, name, typeOfCake, price, amount, picture));
+            }
+        } catch (SQLException e) {
+            e.printStackTrace();
+        } finally {
+            try {
+                connection.close();
+            } catch (SQLException e) {
+                e.printStackTrace();
+            }
+        }
+        return list;
+    }
+
+    @Override
+    public void addReceipt(List<DetailReceipt> list, Receipt receipt) {
+        Connection connection = BaseRepository.getConnection();
+        try {
+            PreparedStatement preparedStatement = connection.prepareStatement(ADD);
+            int id = checkCustomer(receipt.getCustomer());
+            System.out.println(id);
+            preparedStatement.setInt(1, id);
+            preparedStatement.setInt(2, receipt.getEmployee().getId());
+            preparedStatement.setString(3, String.valueOf(LocalDateTime.now()));
+            preparedStatement.setString(4, receipt.getAddress());
+            preparedStatement.executeUpdate();
+        } catch (SQLException e) {
+            e.printStackTrace();
+        }
+    }
+
+    private int checkCustomer(Customer customer) {
+        Connection connection = BaseRepository.getConnection();
+        int id = 0;
+        boolean flag = true;
+        try {
+            Statement statement = connection.createStatement();
+            ResultSet resultSet = statement.executeQuery("Select * form khach_hang");
+            while (resultSet.next()) {
+                if (resultSet.getString("sdt").equals(customer.getPhoneNumber())) {
+                    id = resultSet.getInt("ma_khach_hang");
+                    flag = false;
+                    connection.close();
+                    break;
+                }
+            }
+        } catch (SQLException e) {
+            e.printStackTrace();
+        }
+        if (flag) {
+            String add = "insert into khach_hang(ten_khach_hang, sdt)values('" + customer.getName() + "', '" + customer.getPhoneNumber() +
+                    "');";
+            try {
+                PreparedStatement preparedStatement = connection.prepareStatement(add);
+                preparedStatement.executeUpdate();
+                Statement statement = connection.createStatement();
+                ResultSet resultSet = statement.executeQuery("select * from khach_hang where sdt = '" + customer.getPhoneNumber() + "'");
+                resultSet.next();
+                id = resultSet.getInt("ma_khach_hang");
+            } catch (SQLException e) {
+                e.printStackTrace();
+            } finally {
+                try {
+                    connection.close();
+                } catch (SQLException e) {
+                    e.printStackTrace();
+                }
+            }
+        }
+        return id;
+    }
 }
Index: src/main/java/service/impl/ReceiptService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package service.impl;\r\n\r\npublic class ReceiptService {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/service/impl/ReceiptService.java b/src/main/java/service/impl/ReceiptService.java
--- a/src/main/java/service/impl/ReceiptService.java	(revision 246453dd5525cf1576c1fc7bdf73a4408dacf7de)
+++ b/src/main/java/service/impl/ReceiptService.java	(date 1685849427885)
@@ -1,4 +1,23 @@
 package service.impl;
 
-public class ReceiptService {
+import model.Cake;
+import model.DetailReceipt;
+import model.Receipt;
+import repository.IReceiptRepository;
+import repository.impl.ReceiptRepository;
+import service.IReceiptService;
+
+import java.util.List;
+
+public class ReceiptService implements IReceiptService {
+IReceiptRepository receiptRepository = new ReceiptRepository();
+    @Override
+    public List<Cake> showListCakeOrder() {
+        return receiptRepository.showListCakeOrder();
+    }
+
+    @Override
+    public void addReceipt(List<DetailReceipt> list, Receipt receipt) {
+        receiptRepository.addReceipt(list, receipt);
+    }
 }
Index: src/main/java/model/Receipt.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model;\r\n\r\nimport java.util.Date;\r\n\r\npublic class Receipt {\r\n    private int id;\r\n    private Customer customer;\r\n    private Employee employee;\r\n    private Date date;\r\n    private String address;\r\n\r\n    public Receipt(int id, Customer customer, Employee employee, Date date, String address) {\r\n        this.id = id;\r\n        this.customer = customer;\r\n        this.employee = employee;\r\n        this.date = date;\r\n        this.address = address;\r\n    }\r\n\r\n    public Receipt() {\r\n    }\r\n\r\n    public int getId() {\r\n        return id;\r\n    }\r\n\r\n    public void setId(int id) {\r\n        this.id = id;\r\n    }\r\n\r\n    public Customer getCustomer() {\r\n        return customer;\r\n    }\r\n\r\n    public void setCustomer(Customer customer) {\r\n        this.customer = customer;\r\n    }\r\n\r\n    public Employee getEmployee() {\r\n        return employee;\r\n    }\r\n\r\n    public void setEmployee(Employee employee) {\r\n        this.employee = employee;\r\n    }\r\n\r\n    public Date getDate() {\r\n        return date;\r\n    }\r\n\r\n    public void setDate(Date date) {\r\n        this.date = date;\r\n    }\r\n\r\n    public String getAddress() {\r\n        return address;\r\n    }\r\n\r\n    public void setAddress(String address) {\r\n        this.address = address;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/model/Receipt.java b/src/main/java/model/Receipt.java
--- a/src/main/java/model/Receipt.java	(revision 246453dd5525cf1576c1fc7bdf73a4408dacf7de)
+++ b/src/main/java/model/Receipt.java	(date 1685858410573)
@@ -1,15 +1,16 @@
 package model;
 
+import java.time.LocalDateTime;
 import java.util.Date;
 
 public class Receipt {
     private int id;
     private Customer customer;
     private Employee employee;
-    private Date date;
+    private LocalDateTime date;
     private String address;
 
-    public Receipt(int id, Customer customer, Employee employee, Date date, String address) {
+    public Receipt(int id, Customer customer, Employee employee, LocalDateTime date, String address) {
         this.id = id;
         this.customer = customer;
         this.employee = employee;
@@ -17,6 +18,24 @@
         this.address = address;
     }
 
+    public Receipt(Customer customer, Employee employee, LocalDateTime date, String address) {
+        this.customer = customer;
+        this.employee = employee;
+        this.date = date;
+        this.address = address;
+    }
+
+    public Receipt(Customer customer, Employee employee, String address) {
+        this.customer = customer;
+        this.employee = employee;
+        this.address = address;
+    }
+
+    public Receipt(LocalDateTime date, String address) {
+        this.date = date;
+        this.address = address;
+    }
+
     public Receipt() {
     }
 
@@ -44,11 +63,11 @@
         this.employee = employee;
     }
 
-    public Date getDate() {
+    public LocalDateTime getDate() {
         return date;
     }
 
-    public void setDate(Date date) {
+    public void setDate(LocalDateTime date) {
         this.date = date;
     }
 
Index: src/main/java/service/IReceiptService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package service;\r\n\r\npublic interface IReceiptService {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/service/IReceiptService.java b/src/main/java/service/IReceiptService.java
--- a/src/main/java/service/IReceiptService.java	(revision 246453dd5525cf1576c1fc7bdf73a4408dacf7de)
+++ b/src/main/java/service/IReceiptService.java	(date 1685849427899)
@@ -1,4 +1,13 @@
 package service;
 
+import model.Cake;
+import model.DetailReceipt;
+import model.Receipt;
+
+import java.util.List;
+
 public interface IReceiptService {
+    List<Cake> showListCakeOrder();
+
+    void addReceipt(List<DetailReceipt> list, Receipt receipt);
 }
Index: src/main/java/model/Cake.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model;\r\n\r\npublic class Cake {\r\n    private int id;\r\n    private String name;\r\n    private int typeOfCake;\r\n    private double price;\r\n    private int amount;\r\n    private String picture;\r\n\r\n    public Cake(int id, String name, int typeOfCake, double price) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.typeOfCake = typeOfCake;\r\n        this.price = price;\r\n    }\r\n\r\n    public Cake(int id, String name, int typeOfCake, double price, int amount) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.typeOfCake = typeOfCake;\r\n        this.price = price;\r\n        this.amount = amount;\r\n    }\r\n\r\n    public Cake(String name, int typeOfCake, double price) {\r\n        this.name = name;\r\n        this.typeOfCake = typeOfCake;\r\n        this.price = price;\r\n    }\r\n\r\n    public Cake(int id, String name, int typeOfCake, double price, int amount, String picture) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.typeOfCake = typeOfCake;\r\n        this.price = price;\r\n        this.amount = amount;\r\n        this.picture = picture;\r\n    }\r\n\r\n    public int getId() {\r\n        return id;\r\n    }\r\n\r\n    public void setId(int id) {\r\n        this.id = id;\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public int getTypeOfCake() {\r\n        return typeOfCake;\r\n    }\r\n\r\n    public void setTypeOfCake(int typeOfCake) {\r\n        this.typeOfCake = typeOfCake;\r\n    }\r\n\r\n    public double getPrice() {\r\n        return price;\r\n    }\r\n\r\n    public void setPrice(double price) {\r\n        this.price = price;\r\n    }\r\n\r\n    public int getAmount() {\r\n        return amount;\r\n    }\r\n\r\n    public void setAmount(int amount) {\r\n        this.amount = amount;\r\n    }\r\n\r\n    public String getPicture() {\r\n        return picture;\r\n    }\r\n\r\n    public void setPicture(String picture) {\r\n        this.picture = picture;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/model/Cake.java b/src/main/java/model/Cake.java
--- a/src/main/java/model/Cake.java	(revision 246453dd5525cf1576c1fc7bdf73a4408dacf7de)
+++ b/src/main/java/model/Cake.java	(date 1685823416712)
@@ -8,6 +8,16 @@
     private int amount;
     private String picture;
 
+
+    public Cake(int id, String name, int typeOfCake, double price, int amount, String picture) {
+        this.id = id;
+        this.name = name;
+        this.typeOfCake = typeOfCake;
+        this.price = price;
+        this.amount = amount;
+        this.picture = picture;
+    }
+
     public Cake(int id, String name, int typeOfCake, double price) {
         this.id = id;
         this.name = name;
@@ -29,13 +39,7 @@
         this.price = price;
     }
 
-    public Cake(int id, String name, int typeOfCake, double price, int amount, String picture) {
-        this.id = id;
-        this.name = name;
-        this.typeOfCake = typeOfCake;
-        this.price = price;
-        this.amount = amount;
-        this.picture = picture;
+    public Cake() {
     }
 
     public int getId() {
@@ -77,12 +81,4 @@
     public void setAmount(int amount) {
         this.amount = amount;
     }
-
-    public String getPicture() {
-        return picture;
-    }
-
-    public void setPicture(String picture) {
-        this.picture = picture;
-    }
 }
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n          </set>\r\n        </option>\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision 246453dd5525cf1576c1fc7bdf73a4408dacf7de)
+++ b/.idea/gradle.xml	(date 1685776928939)
@@ -1,5 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="GradleMigrationSettings" migrationVersion="1" />
   <component name="GradleSettings">
     <option name="linkedExternalProjectsSettings">
       <GradleProjectSettings>
Index: src/main/java/controller/ReceiptServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/controller/ReceiptServlet.java b/src/main/java/controller/ReceiptServlet.java
new file mode 100644
--- /dev/null	(date 1685857884894)
+++ b/src/main/java/controller/ReceiptServlet.java	(date 1685857884894)
@@ -0,0 +1,43 @@
+package controller;
+
+import model.*;
+import service.IReceiptService;
+import service.impl.ReceiptService;
+
+import javax.servlet.*;
+import javax.servlet.http.*;
+import javax.servlet.annotation.*;
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.List;
+
+@WebServlet(name = "ReceiptServlet", value = "/receipt-servlet")
+public class ReceiptServlet extends HttpServlet {
+    IReceiptService receiptService = new ReceiptService();
+
+    @Override
+    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
+        List<Cake> list = receiptService.showListCakeOrder();
+        request.setAttribute("list", list);
+        RequestDispatcher rd = request.getRequestDispatcher("view/order/order.jsp");
+        rd.forward(request, response);
+    }
+
+    @Override
+    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
+        List<DetailReceipt> detailReceiptList = new ArrayList<>();
+        for (int i = 1; i <= receiptService.showListCakeOrder().size(); i++) {
+            if (request.getParameter(String.valueOf(i)) != null) {
+                int amount = Integer.parseInt(request.getParameter(String.valueOf(i)));
+                detailReceiptList.add(new DetailReceipt(i, amount));
+
+            }
+        }
+        String name = request.getParameter("name");
+        String phoneNumber = request.getParameter("phoneNumber");
+        String address = request.getParameter("address");
+        Receipt receipt = new Receipt(new Customer(name, phoneNumber), new Employee(1),address);
+        receiptService.addReceipt(detailReceiptList, receipt);
+        request.getRequestDispatcher("index.jsp").forward(request, response);
+    }
+}
Index: src/main/webapp/view/order/order.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/view/order/order.jsp b/src/main/webapp/view/order/order.jsp
new file mode 100644
--- /dev/null	(date 1685848712046)
+++ b/src/main/webapp/view/order/order.jsp	(date 1685848712046)
@@ -0,0 +1,154 @@
+<%--
+  Created by IntelliJ IDEA.
+  User: Dell
+  Date: 6/3/2023
+  Time: 2:24 PM
+  To change this template use File | Settings | File Templates.
+--%>
+<%@ page contentType="text/html;charset=UTF-8" language="java" %>
+<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
+<html>
+<head>
+    <title>Title</title>
+    <style>
+        * {
+            box-sizing: border-box;
+        }
+    </style>
+    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"
+          integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
+    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
+</head>
+<body>
+<form method="post" action="/receipt-servlet">
+    <c:forEach items="${list}" var="cake">
+
+        <div class="card" style="width: 18rem; float: left">
+            <img src="..." class="card-img-top" alt="${cake.name}<br>${cake.price}">
+            <div class="card-body">
+                <button type="button" onClick="tru(${cake.id})" style="float: left">-</button>
+                <input value='0' id="${cake.id}" readonly>
+                <input id="Price${cake.id}" value="${cake.price}" hidden>
+                <input id="Name${cake.id}" value="${cake.name}" hidden>
+                <button type="button" onClick="cong(${cake.id})" style="float: right">+</button>
+            </div>
+        </div>
+    </c:forEach>
+
+    <!-- Button trigger modal -->
+    <button onclick="gioHang()" type="button" class="btn btn-primary" data-bs-toggle="modal"
+            data-bs-target="#staticBackdrop">
+        Giỏ Hàng
+    </button>
+
+    <!-- Modal -->
+    <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
+         aria-labelledby="staticBackdropLabel" aria-hidden="true">
+        <div class="modal-dialog">
+            <div class="modal-content">
+                <div class="modal-header">
+                    <h5 class="modal-title" id="staticBackdropLabel">Modal title</h5>
+                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
+                </div>
+                <div class="modal-body">
+                    <p id="gioHang"></p>
+                </div>
+                <div class="modal-footer">
+                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
+                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#datHang">
+                        Đặt hàng
+                    </button>
+                </div>
+            </div>
+        </div>
+    </div>
+
+    <!-- Button trigger modal -->
+    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#datHang">
+        đặt hàng
+    </button>
+
+    <!-- Modal -->
+    <div class="modal fade" id="datHang" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
+        <div class="modal-dialog">
+            <div class="modal-content">
+                <div class="modal-header">
+                    <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
+                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
+                </div>
+                <div class="modal-body">
+                    Nhập tên <input name="name" value=""><br>
+                    Nhập địa chỉ <input name="address" value=""><br>
+                    Nhập sđt <input name="phoneNumber" value="">
+                </div>
+                <div class="modal-footer">
+                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">quay lại</button>
+                    <button type="submit" class="btn btn-primary">ĐẶT</button>
+                </div>
+            </div>
+        </div>
+    </div>
+
+</form>
+<script>
+
+    function tru(i) {
+        let a = document.getElementById(i).value * 1;
+        if (a == 0) {
+            return;
+        }
+        document.getElementById(i).value = a - 1;
+        gioHang();
+    }
+
+    function cong(i) {
+        let a = document.getElementById(i).value * 1;
+        document.getElementById(i).value = a + 1;
+        gioHang();
+    }
+
+    function layGia(i) {
+        let id = "Price" + i;
+        let gia = document.getElementById(id).value * 1;
+        return gia;
+    }
+
+    function layTen(i) {
+        let id = "Name" + i;
+        let ten = document.getElementById(id).value;
+        return ten;
+    }
+
+    function gioHang() {
+        let a = "1";
+        let gia = 0;
+        let tableString = '<table border="1">';
+        tableString += '<tr>';
+        tableString += '<th>Tên Sản Phẩm</th>';
+        tableString += '<th>Số lượng</th>';
+        tableString += '<th>Giá</th>';
+        tableString += '</tr>';
+        while (document.getElementById(a) != null) {
+            if (document.getElementById(a).value * 1 > 0) {
+                tableString += '<tr>';
+                tableString += '<th>' + layTen(a) + '</th>';
+                tableString += '<th>' + (document.getElementById(a).value * 1) + '</th>';
+                tableString += '<th>' + (document.getElementById(a).value * 1 * layGia(a)) + '</th>';
+                tableString += '<input name="' + a + '" value="' + document.getElementById(a).value + '" hidden>'
+                tableString += '</tr>';
+                gia += (document.getElementById(a).value * 1 * layGia(a));
+            }
+            a = Number(a) + 1;
+            a = String(a);
+        }
+        tableString += '<tr>';
+        tableString += '<td>Tổng</td>';
+        tableString += '<td colspan="2">' + gia + '</td>';
+        tableString += '<tr>';
+
+        tableString += '</table>'
+        document.getElementById("gioHang").innerHTML = tableString;
+    }
+</script>
+</body>
+</html>
Index: src/main/java/repository/IReceiptRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package repository;\r\n\r\npublic interface IReceiptRepository {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/repository/IReceiptRepository.java b/src/main/java/repository/IReceiptRepository.java
--- a/src/main/java/repository/IReceiptRepository.java	(revision 246453dd5525cf1576c1fc7bdf73a4408dacf7de)
+++ b/src/main/java/repository/IReceiptRepository.java	(date 1685849427899)
@@ -1,4 +1,13 @@
 package repository;
 
+import model.Cake;
+import model.DetailReceipt;
+import model.Receipt;
+
+import java.util.List;
+
 public interface IReceiptRepository {
+    List<Cake> showListCakeOrder();
+
+    void addReceipt(List<DetailReceipt> list, Receipt receipt);
 }
Index: src/main/java/model/Employee.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model;\r\n\r\npublic class Employee {\r\n    private int id;\r\n    private String name;\r\n    private String citizenId;\r\n    private String phoneNumber;\r\n    private String address;\r\n    private int positionId;\r\n\r\n    private User user;\r\n\r\n    public Employee(int id, String name, String citizenId, String phoneNumber, String address, int positionId, User user) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.citizenId = citizenId;\r\n        this.phoneNumber = phoneNumber;\r\n        this.address = address;\r\n        this.positionId = positionId;\r\n        this.user = user;\r\n    }\r\n\r\n    public Employee() {\r\n    }\r\n\r\n    public int getId() {\r\n        return id;\r\n    }\r\n\r\n    public void setId(int id) {\r\n        this.id = id;\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public String getCitizenId() {\r\n        return citizenId;\r\n    }\r\n\r\n    public void setCitizenId(String citizenId) {\r\n        this.citizenId = citizenId;\r\n    }\r\n\r\n    public String getPhoneNumber() {\r\n        return phoneNumber;\r\n    }\r\n\r\n    public void setPhoneNumber(String phoneNumber) {\r\n        this.phoneNumber = phoneNumber;\r\n    }\r\n\r\n    public String getAddress() {\r\n        return address;\r\n    }\r\n\r\n    public void setAddress(String address) {\r\n        this.address = address;\r\n    }\r\n\r\n    public int getPositionId() {\r\n        return positionId;\r\n    }\r\n\r\n    public void setPositionId(int positionId) {\r\n        this.positionId = positionId;\r\n    }\r\n\r\n    public User getUser() {\r\n        return user;\r\n    }\r\n\r\n    public void setUser(User user) {\r\n        this.user = user;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/model/Employee.java b/src/main/java/model/Employee.java
--- a/src/main/java/model/Employee.java	(revision 246453dd5525cf1576c1fc7bdf73a4408dacf7de)
+++ b/src/main/java/model/Employee.java	(date 1685823983642)
@@ -23,6 +23,10 @@
     public Employee() {
     }
 
+    public Employee(int id) {
+        this.id = id;
+    }
+
     public int getId() {
         return id;
     }
Index: src/main/webapp/index.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@ page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>Title</title>\r\n    <style>\r\n        *{\r\n            margin: 0;\r\n            padding: 0;\r\n            box-sizing: border-box;\r\n            font-family: 'Poppins',sans-serif;\r\n        }\r\n        section{\r\n            position: relative;\r\n            width: 100%;\r\n            min-height: 100vh;\r\n            padding: 100px;\r\n            display: flex;\r\n            justify-content: space-between;\r\n            align-items: center;\r\n            background: #ffffff;\r\n\r\n        }\r\n        header{\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            padding: 20px 100px;\r\n            display: flex;\r\n            justify-content: space-between;\r\n            align-items: center;\r\n        }\r\n        header.logo{\r\n            position: relative;\r\n            max-width: 80px;\r\n        }\r\n        header ul{\r\n            position: relative;\r\n            display: flex;\r\n        }\r\n        header ul li{\r\n            list-style: none;\r\n        }\r\n        header ul li a{\r\n            display: inline-block;\r\n            color: #333;\r\n            font-weight: 400;\r\n            margin-left: 40px;\r\n            text-decoration: none;\r\n\r\n        }\r\n        .content{\r\n            position: relative;\r\n            width: 100%;\r\n            display: flex;\r\n            justify-content: space-between;\r\n            align-items: center;\r\n        }\r\n        .content .textBox{\r\n            position: relative;\r\n            max-width: 600px;\r\n        }\r\n        .content .textBox h2{\r\n            color: #333;\r\n            font-size: 4em;\r\n            line-height: 1.4em;\r\n            font-weight: 500;\r\n        }\r\n        .content .textBox h2 span{\r\n            color: #d5a531;\r\n            font-size: 1.2em;\r\n            font-weight: 900;\r\n        }\r\n        .content .textBox p{\r\n            color: #333;\r\n        }\r\n        .content .textBox a{\r\n            display: inline-block;\r\n            margin-top: 20px;\r\n            padding: 8px 20px;\r\n            background: #484646;\r\n            color: #ffffff;\r\n            border-radius: 40px;\r\n            font-weight: 500;\r\n            letter-spacing: 1px;\r\n            text-decoration: none;\r\n        }\r\n        .content .imgBox{\r\n            width: 600px;\r\n            display: flex;\r\n            justify-content: flex-end;\r\n            padding-right: 50px;\r\n            margin-top: 50px;\r\n        }\r\n        .content .imgBox img{\r\n            max-width: 340px;\r\n        }\r\n        .thumb{\r\n            position: absolute;\r\n            left: 50%;\r\n            bottom: 20px;\r\n            transform: translateX(-50%);\r\n            display: flex;\r\n        }\r\n        .thumb li{\r\n            list-style: none;\r\n            display: inline-block;\r\n            margin: 0 20px;\r\n            cursor: pointer;\r\n            transition: 0.5s;\r\n        }\r\n        .thumb li:hover{\r\n            transform: translateY(-15px);\r\n        }\r\n        .thumb li img{\r\n            max-width: 60px;\r\n        }\r\n        .circle{\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            background: #b97f9c;\r\n            clip-path: circle(600px at right 850px);\r\n        }\r\n\r\n\r\n    </style>\r\n</head>\r\n<body>\r\n\r\n<section>\r\n    <div class=\"circle\"></div>\r\n    <header>\r\n        <a href=\"#\" ><img style=\"width: 100px\" class=\"logo\" src=\"hihtech-html/image_720.png\" alt=\"\"></a>\r\n        <ul>\r\n            <li><a href=\"#\">Home</a></li>\r\n            <li><a href=\"#\">Đặt Hàng</a></li>\r\n            <li><a href=\"#\">Sản Phẩm</a></li>\r\n            <li><a href=\"/bakery?action=login\">Đăng nhập</a></li>\r\n            <li><a href=\"#\">Đăng kí</a></li>\r\n            <li><a href=\"#\">Search</a></li>\r\n        </ul>\r\n    </header>\r\n    <div class=\"content\">\r\n        <div class=\"textBox\">\r\n            <h2>Hãy yêu con trai <br>bà bán <span class=\"banhmi\">bánh mì</span> </h2>\r\n            <p>lo lo lo cho em <br> lo lo lo lo gì <br> ngoài lo lo lo lo ve</p>\r\n            <a href=\"#\">Xem tiếp</a>\r\n        </div>\r\n        <div class=\"imgBox\">\r\n            <img src=\"img/120502-and-cake-the-masha-bear.png\" class=\"starbucks\">\r\n        </div>\r\n    </div>\r\n    <ul class=\"thumb\">\r\n        <li>\r\n            <img src=\"img/66-red-apple-png-image.png\" alt=\"\" onclick=\"imgSilder('img/66-red-apple-png-image.png');changeCircleColor('#850606')\">\r\n            <img  src=\"img/159089-dark-cake-chocolate-free-transparent-image-hq_600x600.png\" alt=\"\" onclick=\"imgSilder('img/159089-dark-cake-chocolate-free-transparent-image-hq_600x600.png');changeCircleColor('#231a1a')\">\r\n            <img  src=\"img/146915-cake-creamy-piece-free-hq-image.png\" alt=\"\" onclick=\"imgSilder('img/146915-cake-creamy-piece-free-hq-image.png');changeCircleColor('#e8b84b')\">\r\n        </li>\r\n    </ul>\r\n\r\n</section>\r\n<script type=\"text/javascript\">\r\n    function imgSilder(anything){\r\n        document.querySelector('.starbucks').src=anything;\r\n    }\r\n\r\n    function changeCircleColor(color){\r\n        const circle=document.querySelector('.circle');\r\n        circle.style.background=color;\r\n    }\r\n\r\n</script>\r\n</body>\r\n</html>\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/index.jsp b/src/main/webapp/index.jsp
--- a/src/main/webapp/index.jsp	(revision 246453dd5525cf1576c1fc7bdf73a4408dacf7de)
+++ b/src/main/webapp/index.jsp	(date 1685778110523)
@@ -138,7 +138,7 @@
         <a href="#" ><img style="width: 100px" class="logo" src="hihtech-html/image_720.png" alt=""></a>
         <ul>
             <li><a href="#">Home</a></li>
-            <li><a href="#">Đặt Hàng</a></li>
+            <li><a href="/receipt-servlet">Đặt Hàng</a></li>
             <li><a href="#">Sản Phẩm</a></li>
             <li><a href="/bakery?action=login">Đăng nhập</a></li>
             <li><a href="#">Đăng kí</a></li>
Index: src/main/java/model/DetailReceipt.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model;\r\n\r\npublic class DetailReceipt {\r\n    private int receiptId;\r\n    private int cakeId;\r\n    private int amount;\r\n\r\n    public DetailReceipt(int receiptId, int cakeId, int amount) {\r\n        this.receiptId = receiptId;\r\n        this.cakeId = cakeId;\r\n        this.amount = amount;\r\n    }\r\n\r\n    public DetailReceipt() {\r\n    }\r\n\r\n    public int getReceiptId() {\r\n        return receiptId;\r\n    }\r\n\r\n    public void setReceiptId(int receiptId) {\r\n        this.receiptId = receiptId;\r\n    }\r\n\r\n    public int getCakeId() {\r\n        return cakeId;\r\n    }\r\n\r\n    public void setCakeId(int cakeId) {\r\n        this.cakeId = cakeId;\r\n    }\r\n\r\n    public int getAmount() {\r\n        return amount;\r\n    }\r\n\r\n    public void setAmount(int amount) {\r\n        this.amount = amount;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/model/DetailReceipt.java b/src/main/java/model/DetailReceipt.java
--- a/src/main/java/model/DetailReceipt.java	(revision 246453dd5525cf1576c1fc7bdf73a4408dacf7de)
+++ b/src/main/java/model/DetailReceipt.java	(date 1685823416723)
@@ -11,6 +11,11 @@
         this.amount = amount;
     }
 
+    public DetailReceipt(int cakeId, int amount) {
+        this.cakeId = cakeId;
+        this.amount = amount;
+    }
+
     public DetailReceipt() {
     }
 
